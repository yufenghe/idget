<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/aop 
      http://www.springframework.org/schema/aop/spring-aop.xsd
	  http://www.springframework.org/schema/jee 
	  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	  http://www.springframework.org/schema/tx 
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	  http://www.springframework.org/schema/task 
	  http://www.springframework.org/schema/task/spring-task-3.0.xsd
      ">

	<import resource="applicationContext-property.xml"/>
	<import resource="applicationContext-datasource.xml"/>
	<import resource="applicationContext-quartz.xml"/>
	<import resource="applicationContext-transaction.xml"/>
	
	<!--主要作用于@Controller激活该模式下面是一种简写形式,它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter,是spring MVC为@Controllers分发请求所必须的   -->  
	<!-- 使用默认的注解映射 -->
	<!-- content-negotiation-manager="contentNegotiationManager" -->
	<mvc:annotation-driven  />

	<!-- 自动扫描controller包中的控制器 -->
	<context:component-scan base-package="com.id.get" />
	
	<!-- 配置静态资源(JS、CSS、图片等)的访问路径 -->
	<!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
	<!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
	<mvc:resources location="/resources/css/*" mapping="/css/**" />
	<mvc:resources location="/resources/js/*" mapping="/js/**" />
	<mvc:resources location="/resources/img/*" mapping="/images/**" />
	<mvc:resources location="/static/" mapping="/static/**" />
	<!-- 配置静态资源(JS、CSS、图片等)的访问路径 -->
	
	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	
	
<!-- 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
<!-- 	  <property name="mediaTypes"> -->
<!-- 	    <map> -->
<!-- 	      <entry key="atom" value="application/atom+xml"/> -->
<!-- 	      <entry key="html" value="text/html"/> -->
<!-- 	      <entry key="json" value="application/json"/> -->
<!-- 	    </map> -->
<!-- 	  </property> -->
<!-- 	  <property name="viewResolvers"> -->
<!-- 	    <list> -->
<!-- 	      <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/> -->
<!-- 	      <ref local="internalResourceViewResolver"/> -->
<!-- 	    </list> -->
<!-- 	  </property> -->
<!-- 	  <property name="defaultViews"> -->
<!-- 	    <list> -->
<!-- 	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->
<!-- 	      <bean class="org.springframework.web.servlet.view.xml.MarshallingView" p:modelKey="xmlData" p:marshaller-ref="xmlMarshaller"></bean>  -->
<!-- 	    </list> -->
<!-- 	  </property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller"> -->
<!-- 		<property name="streamDriver"> -->
<!-- 			<bean class="com.thoughtworks.xstream.io.xml.StaxDriver"></bean> -->
<!-- 		</property> -->
<!-- 		<property name="annotatedClasses"> -->
<!-- 			<list> -->
<!-- 				<value>com.loushi135.model.User</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
		<!-- 指定使用xstream注解类，在类里设别名  -->
<!-- 	</bean> -->
	
	<!-- 配置JSON视图 -->
     <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
       <property name="supportedMediaTypes">
           <list>
               <value>application/json;charset=UTF-8</value>
               <value>text/html;charset=UTF-8</value>
           </list>
       </property>     
       <property name="objectMapper">
           <bean class="org.codehaus.jackson.map.ObjectMapper">
               <property name="dateFormat">
                   <bean class="java.text.SimpleDateFormat">
                       <constructor-arg index="0" type="java.lang.String" value="yyyy-MM-dd"/>
                   </bean>
               </property>
           </bean>
       </property>
     </bean>
     
     <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>
     
     <bean id="requestMappingHandlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
       <property name="messageConverters">
           <list>
               <ref bean="mappingJacksonHttpMessageConverter"/>
               <ref bean="stringHttpMessageConverter"/>
           </list>
       </property>
     </bean>
     
     <!-- 配置JSP视图 -->
     <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>     
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="1"/>
     </bean>

     
<!--      <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver" > -->
<!--         <property name="basename"> -->
<!--             <value>spring-views</value> -->
<!--         </property> -->
<!--      </bean> -->
      
    <!-- 配置FreeMark视图 -->
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8"/>     
        <property name="viewClass" value="com.id.get.expand.freemarker.ExFreeMarkerView"/>
        <property name="suffix" value=".ftl"/>
        <property name="cache" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>    
        <property name="exposeSpringMacroHelpers" value="true"/>
        <!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
        <property name="requestContextAttribute" value="rc"/>
        <property name="order" value="0"/>
    </bean>
     
    <bean id="freemarkConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:property/freemarker.properties"/>
<!--         <property name="template_update_delay" value="3600"/> -->
    </bean>
     
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
     
    <bean id="FreeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/view/ftl/"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings" ref="freemarkConfig"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
    </bean>
     
    <!-- 文件上传配置注意:这里申明的id必须为multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <property name="maxUploadSize" value="500000"/>
    </bean>
     
    <!-- 简单的异常处理 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 映射目录为 -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/upload_error</prop>
                <prop key="java.lang.Exception">/error/error</prop>
            </props>
        </property>
    </bean>
    
    <!--  服务耗时性能日志切面类 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean class="com.id.get.util.log.LogAspect" />

</beans>